<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>F5XC Experience on F5XC experience</title>
    <link>/</link>
    <description>Recent content in F5XC Experience on F5XC experience</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Jul 2020 14:37:59 +0300</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Directly inside</title>
      <link>/040_local_pops/010_onpremce/</link>
      <pubDate>Wed, 08 Jul 2020 14:37:59 +0300</pubDate>
      
      <guid>/040_local_pops/010_onpremce/</guid>
      <description>F5XC is capable of deploying and Customer Edge ( CE ) in the onprem or cloud environments.
This allows us to send the traffic to the application through an IPSEC tunnel and also provide internal and external load balancing and security services.
 Create a HTTP health check object   function toggle_visibility(el) {const e = el.nextSibling.nextSibling.nextSibling.nextSibling; if(e.style.display == &#39;none&#39;) {el.innerHTML = &#39;Hide&#39;; e.style.display = &#39;block&#39;;}else {el.</description>
    </item>
    
    <item>
      <title>The app</title>
      <link>/020_application/010_app_1/</link>
      <pubDate>Wed, 08 Jul 2020 14:37:59 +0300</pubDate>
      
      <guid>/020_application/010_app_1/</guid>
      <description>The application is a crypto traiding platform with the following components:
 Frontend - serves the non dynamic content for like html, js, css and images Login - in in charge of dealing with anything related to the login user functionality Users - all user data interaction is done through this microservice only Stocks - connects to external resources to get the latest crypto data and serves it to the application clients Stocks Transaction - Deal with all related to buying or selling crypto currencies.</description>
    </item>
    
    <item>
      <title>Password Reset</title>
      <link>/010_intro/010_pwd_reset/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/010_intro/010_pwd_reset/</guid>
      <description>If you reached this step you should already have received an email from F5XC requesting you to reset your password.
Check you email inbox and follow the bellow steps.</description>
    </item>
    
    <item>
      <title>Virual K8S</title>
      <link>/050_virtual_k8s/010_vk8s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/050_virtual_k8s/010_vk8s/</guid>
      <description>Deploy the app in the F5XC Distributed Virtual Kubernetes   function toggle_visibility(el) {const e = el.nextSibling.nextSibling.nextSibling.nextSibling; if(e.style.display == &#39;none&#39;) {el.innerHTML = &#39;Hide&#39;; e.style.display = &#39;block&#39;;}else {el.innerHTML = &#39;Show&#39;; e.style.display = &#39;none&#39;;} }function cp_to_clip(el) {const e = el.nextSibling.nextSibling.children[0];console.log(e.textContent);navigator.clipboard.writeText(e.textContent);} ShowCopy code  {&amp;#34;metadata&amp;#34;: {&amp;#34;name&amp;#34;: &amp;#34;arcadia-stocks&amp;#34;,&amp;#34;labels&amp;#34;: {},&amp;#34;annotations&amp;#34;: {},&amp;#34;disable&amp;#34;: false},&amp;#34;spec&amp;#34;: {&amp;#34;service&amp;#34;: {&amp;#34;num_replicas&amp;#34;: 1,&amp;#34;containers&amp;#34;: [{&amp;#34;name&amp;#34;: &amp;#34;stocks&amp;#34;,&amp;#34;image&amp;#34;: {&amp;#34;name&amp;#34;: &amp;#34;registry.</description>
    </item>
    
    <item>
      <title>Load Balancer</title>
      <link>/020_application/020_lb_1/</link>
      <pubDate>Wed, 08 Jul 2020 14:37:59 +0300</pubDate>
      
      <guid>/020_application/020_lb_1/</guid>
      <description>Our first step will be to publish the on prem Arcadia applicaion through the F5XC.
This will first provide us with built in visibility for the application behaviour and the capability in the next steps to add security services.
  Create the pool that will represent our backend services function toggle_visibility(el) {const e = el.nextSibling.nextSibling.nextSibling.nextSibling; if(e.style.display == &#39;none&#39;) {el.innerHTML = &#39;Hide&#39;; e.style.display = &#39;block&#39;;}else {el.</description>
    </item>
    
    <item>
      <title>Login</title>
      <link>/010_intro/020_first_login/</link>
      <pubDate>Wed, 08 Jul 2020 14:37:59 +0300</pubDate>
      
      <guid>/010_intro/020_first_login/</guid>
      <description>In order to access the F5XC platform you need to follow this link.
Enter your email and new password.
Some additional initial setup steps are required, follow the described bellow.</description>
    </item>
    
    <item>
      <title>Web Application Firewall</title>
      <link>/030_security/020_waf/</link>
      <pubDate>Wed, 08 Jul 2020 14:37:59 +0300</pubDate>
      
      <guid>/030_security/020_waf/</guid>
      <description> First we need to create our WAF policy
We will put our policy into blocking mode and leave the other settings to their default configuration as they are based on F5 best practices in regards to security.  Attach the newely created WAF policy to the load balancer  </description>
    </item>
    
    <item>
      <title>Load balancer onprem CE</title>
      <link>/040_local_pops/020_lbonce/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/040_local_pops/020_lbonce/</guid>
      <description>In cases where going through the F5XC global network is not possible due to very low latency or regulations requirnments we can configure the F5XC CE with the same configuration and capabilities that were used when publishing and protecting the app through the F5 global network.
 Publish the LB directly on the on prem CE   function toggle_visibility(el) {const e = el.nextSibling.nextSibling.nextSibling.nextSibling; if(e.style.display == &#39;none&#39;) {el.innerHTML = &#39;Hide&#39;; e.</description>
    </item>
    
    <item>
      <title>Load Balancer Routing</title>
      <link>/050_virtual_k8s/020_lb_to_vk8s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/050_virtual_k8s/020_lb_to_vk8s/</guid>
      <description>The last step will be to instruct the Load Balancer to send the relevant traffic to the service hosted in the Virtual Kubernetes environment.
 Create a pool that represent the vK8s deployment.  function toggle_visibility(el) {const e = el.nextSibling.nextSibling.nextSibling.nextSibling; if(e.style.display == &#39;none&#39;) {el.innerHTML = &#39;Hide&#39;; e.style.display = &#39;block&#39;;}else {el.innerHTML = &#39;Show&#39;; e.style.display = &#39;none&#39;;} }function cp_to_clip(el) {const e = el.nextSibling.nextSibling.children[0];console.log(e.textContent);navigator.</description>
    </item>
    
    <item>
      <title>Multicloud App</title>
      <link>/040_local_pops/030_multicloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/040_local_pops/030_multicloud/</guid>
      <description>Our onprem infrastracture is no longer able to handle the load of our application which boomed due to mass crypto currency addoption.
We need to quickly expand and this can be done with any of the cloud providers while keeping the same level of application security and workflows.
The management decided to go with AWS and move the Stocks, Stocks Transaction and Frontend services.
The Users and Login services will need to remain onprem since they deal with user sensetive data and the regulation and the security team are not allowing moving them.</description>
    </item>
    
    <item>
      <title>Testing and Visibility</title>
      <link>/030_security/030_visibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/030_security/030_visibility/</guid>
      <description> First lets try and attack our application with a XSS attack using the following URL
https://::makeid::.sales-public.f5demos.com/?a=%3Cscript%3Ealert(%27xss%27)
You will receive a response as seen bellow. Copy the support ID, this will allow us to understand why the request has bee×ž blocked.  The requested URL was rejected. Please consult with your administrator.Your support ID is 37e7688f-6fdd-404e-9f6d-3813f9dc5648[Go Back]Lets look at the logs and understand why the request has been blocked   </description>
    </item>
    
    <item>
      <title>Visibility</title>
      <link>/020_application/030_visibility_1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/020_application/030_visibility_1/</guid>
      <description>Our application is exposed to the world and our clients have alredy started to trade. F5XC not only allows us the publish and protect our application but also to monitor the behaivour.
  The main dashboard presents us with the overall status of our application.   We can monitor each and every requests including what has been sent by the client and the response and latency of the server.</description>
    </item>
    
    <item>
      <title>API Security</title>
      <link>/030_security/040_api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/030_security/040_api/</guid>
      <description>Previously we have protected our application using a Negative Security Model.
We can do a lot more by creating manual rules that define what URLs, Methods and lot more are allowed. This is called Positive Security Model.
Although the Positive Security Model will intruduced enchanced security it will also increase the required maintenance.
Now we can implement both security models without the increased maintenance by using OpenAPI/Swaggerdefinitions of the application.</description>
    </item>
    
    <item>
      <title>Inter DC communication</title>
      <link>/040_local_pops/040_internalcomm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/040_local_pops/040_internalcomm/</guid>
      <description>After migrating parts of the application and specially the Stocks Transaction service it is required to provide connectivity from the cloud environment to the on prem remainging Users service.
 Create the internal Load Balancer which will route the traffic from the AWS site Stock transaction service to the onprem Users service  function toggle_visibility(el) {const e = el.nextSibling.nextSibling.nextSibling.nextSibling; if(e.style.display == &#39;none&#39;) {el.innerHTML = &#39;Hide&#39;; e.style.display = &#39;block&#39;;}else {el.</description>
    </item>
    
    <item>
      <title>Testing API Security</title>
      <link>/030_security/050_testing_api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/030_security/050_testing_api/</guid>
      <description>First we need to verify that the previously defined policy is working as expected
  Browse to https://::makeid::.sales-public.f5demos.com/notanactualpage
You should be able to recive all the relevant HTML, JS, CSS and have rendered the 404 page.
  Browse to https://::makeid::.sales-public.f5demos.com/v1/notanactualapi The request will be blocked with a 403 message and a support ID. Copy to the clipboard the support ID.
  The requested URL was rejected. Please consult with your administrator.</description>
    </item>
    
    <item>
      <title>Bot protection</title>
      <link>/030_security/060_bot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/030_security/060_bot/</guid>
      <description>Bots are a real issue. They are used for mass fraud which has an impact on the business and it customers.
One of the most common attack vectors is Credential stuffing which tries to validates a database of stolen credentials through the use of automation tools.
In the next steps we are going to protect our application login process from being accessed by these bots.
 Go the load balancer config section  Enable the Bot protection  Testing this is quite simple, run the following curl command from your PC curl -X POST https://::makeid::.</description>
    </item>
    
  </channel>
</rss>
